var u=Object.defineProperty;var f=(n,e,r)=>e in n?u(n,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):n[e]=r;var o=(n,e,r)=>(f(n,typeof e!="symbol"?e+"":e,r),r);import{P as s,p as a}from"./vendor.52f78f80.js";const y=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))c(i);new MutationObserver(i=>{for(const t of i)if(t.type==="childList")for(const l of t.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&c(l)}).observe(document,{childList:!0,subtree:!0});function r(i){const t={};return i.integrity&&(t.integrity=i.integrity),i.referrerpolicy&&(t.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?t.credentials="include":i.crossorigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function c(i){if(i.ep)return;i.ep=!0;const t=r(i);fetch(i.href,t)}};y();class m extends s.Scene{constructor(){super({});o(this,"graphics");o(this,"points",[]);o(this,"size",30);o(this,"cursors");o(this,"player");o(this,"reticle");o(this,"moveCam",!0);o(this,"text")}preload(){}create(e){this.graphics=this.add.graphics(),console.log(e),this.player=this.physics.add.image(1024,1024,"block"),this.reticle=this.physics.add.image(800,700,"target"),this.cameras.main.setZoom(1)}update(){this.graphics.clear(),this.graphics.lineStyle(1,16777215,1),this.graphics.fillStyle(65280,1);const e=this.input.activePointer;this.reticle.x=e.x,this.reticle.y=e.y,this.graphics.fillCircle(this.reticle.x,this.reticle.y,5);const r=new s.Geom.Circle(e.x,e.y,80),c=this.points.length?this.points[this.points.length-1]:new s.Math.Vector2(0,0),i=s.Math.Angle.Between(c.x,c.y,e.x,e.y),t=s.Math.RotateTo(this.reticle,c.x,c.y,i,50);if(!s.Geom.Circle.ContainsPoint(r,t)){const h=new s.Geom.Circle(t.x,t.y,40);this.points.some(d=>s.Geom.Circle.ContainsPoint(h,d))?this.points=[new s.Math.Vector2(0,0)]:(this.points.push(new s.Math.Vector2(t.x,t.y)),this.points.length>this.size&&this.points.shift())}if(this.player.x=t.x,this.player.y=t.y,this.points.length){const h=new s.Curves.Spline(this.points);this.points.forEach(p=>this.graphics.fillCircle(p.x,p.y,5)),h.draw(this.graphics,1024)}}}const g={type:a.exports.AUTO,physics:{default:"arcade"},scale:{mode:a.exports.Scale.FIT,parent:"phaser-example",autoCenter:a.exports.Scale.CENTER_BOTH,width:1600,height:1200},backgroundColor:"#2d2d2d",parent:"phaser-example",scene:[m]};new a.exports.Game(g);
